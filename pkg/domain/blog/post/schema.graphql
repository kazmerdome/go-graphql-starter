# MODEL
##########
type Post @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/post.Post") {
  id: ObjectID!
  title: String!
  slug: String!
  category: Category @goField(forceResolver: true)
  content: String
  created_at: Time!
  updated_at: Time!
}

# ENUM
##########
enum PostOrderByENUM @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/post.PostOrderByENUM") {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
  category_ASC
  category_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
}


# DTO
##########

# Read
input PostWhereUniqueDTO @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/post.PostWhereUniqueDTO") {
  id: ObjectID!
}
input PostWhereDTO @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/post.PostWhereDTO") {
  id: ObjectID
  title: String
  slug: String
  category: ObjectID
}

# Create
input PostCreateDTO @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/post.Post") {
  title: String!
  slug: String!
  category: ObjectID!
  content: String
}

# Update
input PostUpdateDTO @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/post.Post") {
  title: String!
  slug: String!
  category: ObjectID!
  content: String
}
