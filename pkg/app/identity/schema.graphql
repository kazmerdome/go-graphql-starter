
# type Identity @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.Identity") {
#   id: ObjectID!
#   email: String!
#   auth_strategy: [AuthStrategy!]!
#   policy: [Policy!]!
#   username: String!
#   last_login: Time
#   last_seen: Time
#   created_at: Time!
#   updated_at: Time!
# }

# type AuthStrategy @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.AuthStrategy") {
#   type: AuthStrategyType!
#   # secret: String! # security block
# }

# input AuthStrategyDTO @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.AuthStrategy") {
#   type: AuthStrategyType!
#   # secret: String! # security block
# }

# type Policy @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.Policy") {
#   resource: PolicyResource!
#   role: PolicyRole!
# }

# input PolicyDTO @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.Policy") {
#   resource: PolicyResource!
#   role: PolicyRole!
# }


# enum AuthStrategyType @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.AuthStrategyType") {
#   BASIC
#   GOOGLE_OAUTH
# }

# enum PolicyResource @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.PolicyResource") {
#   BASE_SERVER
# }

# enum PolicyRole @goModel(model: "github.com/kazmerdome/go-graphql-starter/pkg/domain/blog/identity.PolicyRole") {
#   VISITOR
#   USER
#   EDITOR
#   ADMIN
# }
